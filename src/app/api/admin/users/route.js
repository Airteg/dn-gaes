import { NextResponse } from "next/server";
import { auth } from "@/auth";
import { getUsers } from "@/utils/db/users";

export const GET = async (req) => {
  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:
  // ‚õî –ó–∞–±–æ—Ä–æ–Ω—è—î –¥–æ—Å—Ç—É–ø, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π –∞–±–æ –Ω–µ admin.
  const session = await auth();
  if (!session?.user || session.user.role !== "admin") {
    return NextResponse.json({ error: "Forbidden" }, { status: 403 });
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –∑ URL:
  // –í–∏—Ç—è–≥—É—î page, filter, showDeleted –∑ URL, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:
  // /api/admin/users?page=1&filter=Anna&showDeleted=false
  const { searchParams } = new URL(req.url);
  const page = Number(searchParams.get("page") ?? 1);
  const filter = searchParams.get("filter") ?? "";
  const showDeleted = searchParams.get("showDeleted") === "true";

  // üîç –ü–æ–±—É–¥–æ–≤–∞ —Ñ—ñ–ª—å—Ç—Ä–∞ –¥–ª—è MongoDB:
  // –Ø–∫—â–æ —î filter=Anna, —à—É–∫–∞—î email –∞–±–æ name, —â–æ –º—ñ—Å—Ç–∏—Ç—å "Anna" (–Ω–µ—á—É—Ç–ª–∏–≤–æ –¥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É).
  const filterObj = filter
    ? {
        $or: [
          { email: { $regex: filter, $options: "i" } },
          { name: { $regex: filter, $options: "i" } },
        ],
      }
    : {};

  // üì¶ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:
  // –í–∏–∫–ª–∏–∫–∞—î getUsers –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: filterObj, skip, limit, showDeleted.
  const { users, total } = await getUsers({
    filter: filterObj,
    skip: (page - 1) * 10,
    limit: 10,
    showDeleted,
  });

  // üßº –°–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:
  const serializedUsers = users.map((user) => ({
    _id: user._id.toString(),
    email: user.email,
    name: user.name,
    role: user.role,
    status: user.status,
    isDeleted: user.isDeleted,
    createdAt: user.createdAt,
    nickname: user.nickname,
    position: user.position,
    placeOfWork: user.placeOfWork,
  }));
  // console.log("üîç –°–µ—Ä—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ:", serializedUsers);

  // ‚úÖ –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É:
  // –ü–æ–≤–µ—Ä—Ç–∞—î JSON –∑ –º–∞—Å–∏–≤–æ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —Ç–∞ –∑–∞–≥–∞–ª—å–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é.
  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î NextResponse.json –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.
  return NextResponse.json({ users: serializedUsers, total });
};
