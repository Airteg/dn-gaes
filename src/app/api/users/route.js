import { NextResponse } from "next/server";
import { authMiddleware } from "@/middleware/authMiddleware";
import User from "@/models/User";
import connectToDatabase from "@/utils/db";

// üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤)
async function getUsers(req) {
  await connectToDatabase();

  const users = await User.find().select("-password"); // –í–∏–ª—É—á–∞—î–º–æ –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è
  return NextResponse.json(users);
}

// üîπ –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∞–±–æ —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤)
async function updateUser(req) {
  await connectToDatabase();
  const { id, status, role } = await req.json();

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ—Å–Ω—É—î
  const user = await User.findById(id);
  if (!user) {
    return NextResponse.json(
      { error: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π" },
      { status: 404 },
    );
  }

  // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∞–±–æ —Ä–æ–ª—å, —è–∫—â–æ –ø–µ—Ä–µ–¥–∞–Ω–æ
  if (status) user.status = status;
  if (role) user.role = role;

  await user.save();
  return NextResponse.json({ message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ" });
}

// üîπ –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ (–º'—è–∫–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è)
async function deleteUser(req) {
  await connectToDatabase();
  const { id } = await req.json();

  const user = await User.findById(id);
  if (!user) {
    return NextResponse.json(
      { error: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π" },
      { status: 404 },
    );
  }

  user.isDeleted = true; // –ü–æ–∑–Ω–∞—á–∞—î–º–æ —è–∫ –≤–∏–¥–∞–ª–µ–Ω–æ–≥–æ
  await user.save();

  return NextResponse.json({ message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∏–¥–∞–ª–µ–Ω–æ" });
}

// üõ° –î–æ–¥–∞—î–º–æ –∑–∞—Ö–∏—Å—Ç –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤
export const GET = authMiddleware(getUsers, "admin");
export const PATCH = authMiddleware(updateUser, "admin");
export const DELETE = authMiddleware(deleteUser, "admin");
